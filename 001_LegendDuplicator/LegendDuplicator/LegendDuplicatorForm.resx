<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPoAAAAfCAYAAADOZdAMAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAAuIgAALiIBquLdkgAADdpJREFUeF7VnWWQbEkR
        Rh9ui+vDCdzd3YLF3Qncg114yOK6uLME7u7u7u7ugXvgtjjfmZicqMn35a3q7ume5sfpfXsrM3v6dmXd
        qsys6j0HHbxvlHOLO4tnibeLL4ufiz9u8lPxVfFe8RLxcHFNcTrh7GUuJx4s7me4r7i3OETcQ9xN3F5c
        WZxNHEE4m1McXdxLPEDE+9x/kxMKp9NyffEg0f6dLWHr+MLp9ziNeKDAhrMPvD/3wOlPcSRxDfE08QHx
        A9F+j18UbxFPFbcUZxJHFs5WcCmRvz/+vqsLJ1/B/UK3/dz8mz5wbOF0RjmioA+13znw//QFpzMF/sB3
        1NriHlxaOHnHBUTVj7B9R+H0Kg4W7d/EZzvECbacQHCD+eL/uwAvFc5+CzJOdwQ66vPEFYWz7TiRcLaA
        Qc3ptDDQOd0MA5PT78FA6exl3iacfsVdBffL2ZriwsLZC54pnN77hJOvOLtwduC0wumMcj3h7AbXEk6v
        ovKLzwkn73iXcDZa6KtON3NG4fQPd8LBfcRvhVOclW8K9x4tjxNOd1beKI4j3Hu08OT4s3A2ziKcTsub
        hdPNfFo4/R5fEM5ehhmW088wQ+BvcTZGwAGd3eChwum9UDj5ijMIZ+df4hTC6YzyHuFsBx8VTq/iLsLZ
        +Zs4hnA6mZFB9yrC6WZuLZz+YU74eOJjwinMy8uFe6+WnXJ0+LZgau7eJ1iVo8PJhbNRwXLH2XGMOPox
        xS+E0x/hL+IA4WwH6+7opxTObub0wuk7WNI4G3AJ4XRamKE43cyjhdPPcK+d/oFZkC/zu8IJO34mPiNY
        lzM4fEccLrLc40V+r8xOOjo8Q7j3CVbp6AcJZ6PinsLZcYw4+siyKOIrnxXEXtq2Xwpnt2XdHX10KXSY
        cPoV1ROZtbGTb7mhcLqZdwunn/meyLr/FAdkwZG1+GsFf2AVoDmxIMBwK/EK8W/xBJHlMpWj835MXa4m
        COxcV9xB9DovH5AnmXsvWIaj0xnzNXi/cDYqWOM5O3ymfK3n6KcWWaeFQFd+ih1FsN67tnjZJr2A57o7
        +m+Es5uhTxxVOBuOpwtnh2Cmk28Zfbgxo+otBapZIIP3nlbwYcIJBjy5LyJanRGYnow4TvWhiZI6ecDu
        1Bpnam2zDEf/iSAjka//XfSmvgGdOevDW4WbfvccnWhy1glmiej+Pzs62Z9s7z/iH+lacFPh7DiuI5wN
        +oKTb/mEcLqOCwpnIyA74vSIvG85+kk2L1a8XrRGl0Hl6I8RTj44v3B6QLDE6cAyHP33grSfszvaeUgd
        Zl06zU2EWxb1HJ1ZVdYBlllOfl7W2dEJsmV7XxJXSteCjwhnx3FcUQ0YUwHMo4k/iazzKPH9dA162Zsn
        iawD5xNbjs4a2gkBT/LW4LKY19EhrykDMgdOHpa1RmcaTOQ/X0fe2cl8SmRd4g0E9PJ16Dl6FWl+kXDy
        87Kujl4FvKghoJ3ArWufJSjnBhJgienkgVx7lmeWQb/8YHMteLVwdgLXb34lNtp5oYigWr+wJhzN4S3K
        Io5eBRCnRsFlOTr388bpGvA07q2z9oqsBxSjoOvaeo7uOg28Uzj5eVlXR6cYxdmjQIt2+pdr5wmZbVUQ
        53A2XiycPFDPkOUZdGh7fnMt+JrINgIyZVkeiK1syPBy8c2LjpFo+U4xr6Oz9mUN7HQvL5wOLMvRCUYS
        zHFtVNM5W8EtRNahg9PGEya3Qc/RCQo5PYKkrC+dzjysq6O7uAbZomg/1+a1DH2jVw0YMBA7Gz8UTh6e
        LbI8FaW03am5FvB9nUxkO3BVkeWBKrkNGV4esnnRQcS2NbhMKkdnzeLkgxcIp0exj5MPluXo5xW0k67K
        bWQQsp0WqtyyThRxVANyz9Grp02Ag44UGPWoHP0pwslXEPRzduZxdIKxzlZOvX5DOLmbi1augtkWRTLO
        RrUEcJWVEXgmB5/bgIxTtgOV72zFCHh51ebFDB21NbZsqj+WElwnT5kqUxOnA0QhnV6wLEe/mKCdaGdu
        +6uoUjfHEi6oE8sPt6aDnqP3Aq3wa8H9P6dwNkaoHJ0SWFKj1NYT/Z6C9CnrWmdnHkcnteRsXUi0cuyj
        cHJExVu5KVy2BdxgUZVfX0HQzsDr+sIjRbYFBA+z7LaoPy8fF1kIeh3oduI1goGiB3J0BGcnqByd0RaH
        fqXAuXjC9coGR9ZXy3L0iwraq7xmNV0mqu7k9wraq+lh73uCqRRbhjU9Swhy6c5WReXoO8Wsjl4F4Sgq
        ybInFU4WRjdluWwJPFdk2QNFlsu58g+JLENRWmsHGBS4N1l22/vyUjlNbzfPm4TTq/iRcHaCytFngaDi
        aBXashy9rTX4/Oa1lsoxXaS+faIs4ujAQOn0K34s7i6cLce6OXq1JGVnl5OnqMnJjwbl6DNOPwJsLYeK
        LPdJ0cq4TBj9Nc8ImQVkOeDBsSXHyx+EE9xayBdUu5UqPiycnWARR+cmMUo6uxWrcHS3PiblkYtPmLa7
        gCJBmZBZ1NGBdKMb/af4iuhtaIF1c3QGKmfnVMLJ30w4ebbusq3X6WRc/huos2/lXCwmB51ZxmQZuIxo
        5R4hsgxpOoLCW3K8VJ19n9gSNJCHdXoVy3R0nGeWDg+rcPSzbl7L4LStrarmuU1t7oSjA8GhqdiGg9hC
        bwq7To7OdmVnw019gypFBaPFTi6SDgwiIcOS6Hciy7CFtrWFo2YZyCljNxNhJtnKbDh6taupl1ojcokc
        o0cm24J5HR17pBYquy3vEM62YxWODi6iy4EOrQx76bMMB0K0Mjvl6ME5BPe8evJlWOJNlcFWjs7ygwAb
        5bY9kGNq7ezM4uj0A2fjBsLJB1UGZ7RoDPtOv31aV/vt3Q5Hqvey3BtEtJNadtWS++1244XdSlkQeo6J
        o7DHmalQy2XFPPYqR2fTAFMfUn04IGuPaooEUQjRY1WOzi6mLMPgGu0U2Lh9/xRUtHZ22tEDcsV0UBe5
        zUxVGlaOPkvhSeDsjDp6VUGIQ5xH0I6dzF7h6hiCkYwEfcrptn3fZRW+JVo7gVseUwUa7ZfcvJbZr36E
        F+rYnTB5wandXxVV6mBeR3fBE456Yjrp5EdPXFmVo1eFLhGd50tx7XktuSxHbyEFRjGJex9gd6PTg8rR
        V10wU/0dVHmyF4H/YisT7U4XRusB3FkO2I5NTUTDczsziWwHSM1lWeD4NNoJPOc2Ygr7ZUx4qUoEgQ0a
        2xQGqNal8zp6VRlHft3Jw17hdFpW5ejgpmBPFrS5UTtHYGEVjg6kmqq9A+Tbq2qxdXF09s47/UVh1tXb
        wQcuOAYxsLu+QKo624EqRcsWcNrdQ9puieaFKUkWDjgocD+lDqtydPKHTh56ZbOwSkd3eewIDLlliEsR
        rsrRwT0pgMxAtfdhHRy9SjXtFOxhcO/bUlXjRQbFtREvyXYCl/7mXtPmBrVo20b8o9rBA88R25Q6rMrR
        weWegekLa1+nE6zS0d09IVNQnSTjappX6ejV9k2Wc0Snnc46ODqBKqe7U4wE5TjCzJXDMvVnOZavt2tu
        B/XvWYepfrVEdv1vy9E5ScQpBXaUKFilo3PUsdMBDspzOsEqHR04INPJZ6iIcvqrdPRqOccMr5q+7raj
        V+koYIsnO8lwmh7ITZ3wO1JT4E52ZQbnDnfpZYrcw4Atqe5+s7ywOf/2f6rjiwKi370DF6G64ctwdODJ
        6PQ4RdXJB6t2dM77dvIZ0kxOf15HZ2bDlLaacmcIHroDEcDFDoLddvQqLfd14eSnYEblbAExFafTQq47
        6xH1d8VpvYMfXRaLGYMLHL5OOBvbHJ1pRXVSRkDOlfUmW/uqqXG182ZZjj516B+zC6cDq3b0qRNDA+oF
        tlU0NSzyRCeSTsfAGfl+3G41asOphqzuCVDpl/WC3XZ0ZhtOjyeik+/houcwEpSrtr46ekc5cxLN1HfS
        0lZSbiNf4NiZKm2VwenZHcTWS+AgA6Y81WCxLEefGn2nfjhi1Y4OlJM6nWDqCKN5HZ1OyU6mVgen5+lM
        jIOngDudJIOjTZ17t5uO7jaJAEVWHPXkdHpMndB6I+F0WvI9rxj5VaCRGgcoqxfdRZ48o+vJWViWo0P1
        axd80VXn3A1Hd1tXW6Y2kczr6MwQmCk43Vkgx+7sB7vp6DxonM4iZx2y1mVHmbM7tYQJqiq7lt7yMqhS
        di2csuR0N7AXBR+SAx9I9Duj89A7FXMRR6cTOl2o9rPvhqNXedFgr3B6MK+jcxCG0xuFGd5IrfduOTrf
        YzWQzfIbaA7OlXN2gQei0wnccWKZkfU+TPXvgBia093AXmygxJWa99F66AqKBKaObYbqnPaRQwwp4nC6
        gZseVekJWOS313oluO6QfcCekw+qDAPHQDv5gIMwnF4PcuZ0xLzzqsIV/sCsv71G1ZezA8QRsjxRcifL
        luUsOytTg2TvUIpqP3xLFL70YDBz+i23EU53A3vRQEkdkVumEOQqqY8nkc/NJGfNmo8nNhs4OBiCdAYz
        Ao6+4YcAnM0MoxabPagYC/j/0V/jZPdP1gc2jJxZZHk2+T9WkN/MOlSHZfnMbQW/6tHqYct1xhZ2VrnP
        mbcfZoiG578Vvd5GDQZBBmzOFeP7YzpLKSuDN98b3x+7qTjfjN9m4+ezCOpMBb4cDETuc23bFz0AAzC6
        7Wfl308Ubr1N/X3+HnhfagGy7Dywd9x9z0TLe0E50pRZt2U0EwI8KJ2tuE+cJOT0xL49/wOmOPt7oTi2
        LgAAAABJRU5ErkJggg==
</value>
  </data>
</root>